// #include<stdio.h>
void swap(int* a, int* b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
int partition(int arr[], int low, int high, int b[])
{
    int pivot = arr[high];
    int i = (low - 1);

    for (int j = low; j <= high- 1; j++)
    {
        if (arr[j] <= pivot)
        {
            i++;
            swap(&arr[i], &arr[j]);
            swap(&b[i], &b[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    swap(&b[i + 1], &b[high]);
    return (i + 1);
}
void MaskQuickSort(int arr[], int low, int high, int b[]) 
{
    if (low < high)
    {
        int pi = partition(arr, low, high, b);
        MaskQuickSort(arr, low, pi - 1, b);
        MaskQuickSort(arr, pi + 1, high, b);
    }
}
